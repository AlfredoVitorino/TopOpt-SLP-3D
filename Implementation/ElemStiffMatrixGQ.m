function [k] = ElemStiffMatrixGQ(str,n,elem)
% ElemStiffMatrix constructs the finite element stiffness matrix using Gaussian quadrature to numerically integrate the matrix. % 
% INPUT: str - structure with the problem data.
%        n - Gaussian quadrature order.
%        elem - structure with element characteristics (deg - polynomial degree, type - element type (1 = Lagrange, 2 = serendipity).
% OUTPUT: k - finite element stiffness matrix. 

a = str.el/2; % half of element length
b = str.eh/2; % half of element height
c = str.ew/2; % half of element width
E = 1.0; % Using a unit Young's modulus (since we work with emin)
v = str.nu; % Poisson's ratio

% m = total number of nodes in each element
if(elem.type == 1) % Lagrange element
    m = (elem.deg+1)^3;
elseif(elem.type == 2) % Serendipity element
    m = 8 + 12*(elem.deg-1);
end
aux = 1:m; % auxiliar vector for construction of matrix B
k = zeros(3*m,3*m); % prealocation for element stiffness matrix 

% Constitutive matrix D
D = (E/((1+v)*(1-2*v)))*[1-v, v, v, 0, 0, 0; v, 1-v, v, 0, 0, 0;...
    v, v, 1-v, 0, 0, 0; 0, 0, 0, (1-2*v)/2, 0, 0;...
    0, 0, 0, 0, (1-2*v)/2, 0; 0, 0, 0, 0, 0, (1-2*v)/2]; 

if(n==1)
    GaussPt = 0; % Coordinate of integration points 
    w = 2; % Weight factors for integration
elseif(n==2)
    GaussPt = [-1/sqrt(3), 1/sqrt(3)];  
    w = [1, 1]; 
elseif(n==3)
    GaussPt = [-sqrt(0.6), 0, sqrt(0.6)]; 
    w = [5/9, 8/9, 5/9]; 
elseif(n==4)
    r = sqrt(1.2);
    GaussPt = [-sqrt((3+2*r)/7), -sqrt((3-2*r)/7), sqrt((3-2*r)/7), sqrt((3+2*r)/7)];
    w = [1/2-1/(6*r), 1/2+1/(6*r), 1/2+1/(6*r), 1/2-1/(6*r)];
elseif(n==5)
    GaussPt = [-(1/3)*sqrt(5+2*sqrt(10/7)), -(1/3)*sqrt(5-2*sqrt(10/7)), 0, (1/3)*sqrt(5-2*sqrt(10/7)), (1/3)*sqrt(5+2*sqrt(10/7))];
    w = [(322-13*sqrt(70))/900, (322+13*sqrt(70))/900, 128/225, (322+13*sqrt(70))/900, (322-13*sqrt(70))/900];
end

for g1 = 1:n
    for g2 = 1:n
        for g3 = 1:n   
            x1 = GaussPt(g1);
            x2 = GaussPt(g2);
            x3 = GaussPt(g3);
            
            % Derivatives of shape functions
            if(elem.deg == 1) % Linear element
                dxPhi = (1/(8*a))*[-(1-x2)*(1-x3), -(1+x2)*(1-x3), (1-x2)*(1-x3), (1+x2)*(1-x3),... 
                        -(1-x2)*(1+x3), -(1+x2)*(1+x3), (1-x2)*(1+x3), (1+x2)*(1+x3)];
                dyPhi = (1/(8*b))*[-(1-x1)*(1-x3), (1-x1)*(1-x3), -(1+x1)*(1-x3), (1+x1)*(1-x3),... 
                        -(1-x1)*(1+x3), (1-x1)*(1+x3), -(1+x1)*(1+x3), (1+x1)*(1+x3)];   
                dzPhi = (1/(8*c))*[-(1-x1)*(1-x2), -(1-x1)*(1+x2), -(1+x1)*(1-x2), -(1+x1)*(1+x2),... 
                        (1-x1)*(1-x2), (1-x1)*(1+x2), (1+x1)*(1-x2), (1+x1)*(1+x2)];
            elseif(elem.deg == 2)
                if(elem.type == 1) % Lagrange quadratic element
                    dxPhi = (1/(8*a))*[(-1 + 2*x1)*(-x2 + x2^2)*(-x3 + x3^2), 2*(-1 + 2*x1)*(1 - x2^2)*(-x3 + x3^2), (-1 + 2*x1)*(x2 + x2^2)*(-x3 + x3^2),...
                            -4*x1*(-x2 + x2^2)*(-x3 + x3^2), -8*x1*(1 - x2^2)*(-x3 + x3^2), -4*x1*(x2 + x2^2)*(-x3 + x3^2),...
                            (1 + 2*x1)*(-x2 + x2^2)*(-x3 + x3^2), 2*(1 + 2*x1)*(1 - x2^2)*(-x3 + x3^2), (1 + 2*x1)*(x2 + x2^2)*(-x3 + x3^2),... 
                            2*(-1 + 2*x1)*(-x2 + x2^2)*(1 - x3^2), 4*(-1 + 2*x1)*(1 - x2^2)*(1 - x3^2), 2*(-1 + 2*x1)*(x2 + x2^2)*(1 - x3^2),...
                            -8*x1*(-x2 + x2^2)*(1 - x3^2), -16*x1*(1 - x2^2)*(1 - x3^2), -8*x1*(x2 + x2^2)*(1 - x3^2),... 
                            2*(1 + 2*x1)*(-x2 + x2^2)*(1 - x3^2), 4*(1 + 2*x1)*(1 - x2^2)*(1 - x3^2), 2*(1 + 2*x1)*(x2 + x2^2)*(1 - x3^2),... 
                            (-1 + 2*x1)*(-x2 + x2^2)*(x3 + x3^2), 2*(-1 + 2*x1)*(1 - x2^2)*(x3 + x3^2), (-1 + 2*x1)*(x2 + x2^2)*(x3 + x3^2),...
                            -4*x1*(-x2 + x2^2)*(x3 + x3^2), -8*x1*(1 - x2^2)*(x3 + x3^2), -4*x1*(x2 + x2^2)*(x3 + x3^2),...
                            (1 + 2*x1)*(-x2 + x2^2)*(x3 + x3^2), 2*(1 + 2*x1)*(1 - x2^2)*(x3 + x3^2), (1 + 2*x1)*(x2 + x2^2)*(x3 + x3^2)];

                    dyPhi = (1/(8*b))*[(-x1 + x1^2)*(-1 + 2*x2)*(-x3 + x3^2), -4*(-x1 + x1^2)*x2*(-x3 + x3^2), (-x1 + x1^2)*(1 + 2*x2)*(-x3 + x3^2),... 
                            2*(1 - x1^2)*(-1 + 2*x2)*(-x3 + x3^2), -8*(1 - x1^2)*x2*(-x3 + x3^2), 2*(1 - x1^2)*(1 + 2*x2)*(-x3 + x3^2),... 
                            (x1 + x1^2)*(-1 + 2*x2)*(-x3 + x3^2), -4*(x1 + x1^2)*x2*(-x3 + x3^2), (x1 + x1^2)*(1 + 2*x2)*(-x3 + x3^2),... 
                            2*(-x1 + x1^2)*(-1 + 2*x2)*(1 - x3^2), -8*(-x1 + x1^2)*x2*(1 - x3^2), 2*(-x1 + x1^2)*(1 + 2*x2)*(1 - x3^2),... 
                            4*(1 - x1^2)*(-1 + 2*x2)*(1 - x3^2), -16*(1 - x1^2)*x2*(1 - x3^2), 4*(1 - x1^2)*(1 + 2*x2)*(1 - x3^2),... 
                            2*(x1 + x1^2)*(-1 + 2*x2)*(1 - x3^2), -8*(x1 + x1^2)*x2*(1 - x3^2), 2*(x1 + x1^2)*(1 + 2*x2)*(1 - x3^2),...
                            (-x1 + x1^2)*(-1 + 2*x2)*(x3 + x3^2), -4*(-x1 + x1^2)*x2*(x3 + x3^2), (-x1 + x1^2)*(1 + 2*x2)*(x3 + x3^2),... 
                            2*(1 - x1^2)*(-1 + 2*x2)*(x3 + x3^2), -8*(1 - x1^2)*x2*(x3 + x3^2), 2*(1 - x1^2)*(1 + 2*x2)*(x3 + x3^2),... 
                            (x1 + x1^2)*(-1 + 2*x2)*(x3 + x3^2), -4*(x1 + x1^2)*x2*(x3 + x3^2), (x1 + x1^2)*(1 + 2*x2)*(x3 + x3^2)];

                    dzPhi = (1/(8*c))*[(-x1 + x1^2)*(-x2 + x2^2)*(-1 + 2*x3), 2*(-x1 + x1^2)*(1 - x2^2)*(-1 + 2*x3), (-x1 + x1^2)*(x2 + x2^2)*(-1 + 2*x3),... 
                            2*(1 - x1^2)*(-x2 + x2^2)*(-1 + 2*x3), 4*(1 - x1^2)*(1 - x2^2)*(-1 + 2*x3), 2*(1 - x1^2)*(x2 + x2^2)*(-1 + 2*x3),...
                            (x1 + x1^2)*(-x2 + x2^2)*(-1 + 2*x3), 2*(x1 + x1^2)*(1 - x2^2)*(-1 + 2*x3), (x1 + x1^2)*(x2 + x2^2)*(-1 + 2*x3),...
                            -4*(-x1 + x1^2)*(-x2 + x2^2)*x3, -8*(-x1 + x1^2)*(1 - x2^2)*x3, -4*(-x1 + x1^2)*(x2 + x2^2)*x3,... 
                            -8*(1 - x1^2)*(-x2 + x2^2)*x3, -16*(1 - x1^2)*(1 - x2^2)*x3, -8*(1 - x1^2)*(x2 + x2^2)*x3,...
                            -4*(x1 + x1^2)*(-x2 + x2^2)*x3, -8*(x1 + x1^2)*(1 - x2^2)*x3, -4*(x1 + x1^2)*(x2 + x2^2)*x3,...
                            (-x1 + x1^2)*(-x2 + x2^2)*(1 + 2*x3), 2*(-x1 + x1^2)*(1 - x2^2)*(1 + 2*x3), (-x1 + x1^2)*(x2 + x2^2)*(1 + 2*x3),...
                            2*(1 - x1^2)*(-x2 + x2^2)*(1 + 2*x3), 4*(1 - x1^2)*(1 - x2^2)*(1 + 2*x3), 2*(1 - x1^2)*(x2 + x2^2)*(1 + 2*x3),... 
                            (x1 + x1^2)*(-x2 + x2^2)*(1 + 2*x3), 2*(x1 + x1^2)*(1 - x2^2)*(1 + 2*x3), (x1 + x1^2)*(x2 + x2^2)*(1 + 2*x3)];
                        
                elseif(elem.type == 2) % Serendipity quadratic element
                    dxPhi = (1/(8*a))*[(-1 + x2)*(-1 + x3)*(1 + 2*x1 + x2 + x3), -2*(-1 + x2^2)*(-1 + x3), (1 + x2)*(-1 - 2*x1 + x2 - x3)*(-1 + x3), -4*x1*(-1 + x2)*(-1 + x3),... 
                                   4*x1*(1 + x2)*(-1 + x3), -((-1 + x2)*(-1 + x3)*(1 - 2*x1 + x2 + x3)), 2*(-1 + x2^2)*(-1 + x3), -((1 + x2)*(-1 + 2*x1 + x2 - x3)*(-1 + x3)),...
                                   -2*(-1 + x2)*(-1 + x3^2), 2*(1 + x2)*(-1 + x3^2), 2*(-1 + x2)*(-1 + x3^2), -2*(1 + x2)*(-1 + x3^2),...
                                   -((-1 + x2)*(1 + 2*x1 + x2 - x3)*(1 + x3)), 2*(-1 + x2^2)*(1 + x3), -((1 + x2)*(1 + x3)*(-1 - 2*x1 + x2 + x3)), 4*x1*(-1 + x2)*(1 + x3),...
                                   -4*x1*(1 + x2)*(1 + x3), (-1 + x2)*(1 - 2*x1 + x2 - x3)*(1 + x3), -2*(-1 + x2^2)*(1 + x3), (1 + x2)*(1 + x3)*(-1 + 2*x1 + x2 + x3)];
                               
                    dyPhi = (1/(8*b))*[(-1 + x1)*(-1 + x3)*(1 + x1 + 2*x2 + x3), -4*(-1 + x1)*x2*(-1 + x3), -((-1 + x1)*(-1 + x3)*(1 + x1 - 2*x2 + x3)), -2*(-1 + x1^2)*(-1 + x3),...
                                       2*(-1 + x1^2)*(-1 + x3), (1 + x1)*(-1 + x1 - 2*x2 - x3)*(-1 + x3), 4*(1 + x1)*x2*(-1 + x3), -((1 + x1)*(-1 + x1 + 2*x2 - x3)*(-1 + x3)),...
                                       -2*(-1 + x1)*(-1 + x3^2), 2*(-1 + x1)*(-1 + x3^2), 2*(1 + x1)*(-1 + x3^2), -2*(1 + x1)*(-1 + x3^2),...
                                       -((-1 + x1)*(1 + x1 + 2*x2 - x3)*(1 + x3)), 4*(-1 + x1)*x2*(1 + x3), (-1 + x1)*(1 + x1 - 2*x2 - x3)*(1 + x3), 2*(-1 + x1^2)*(1 + x3),...
                                       -2*(-1 + x1^2)*(1 + x3), -((1 + x1)*(1 + x3)*(-1 + x1 - 2*x2 + x3)), -4*(1 + x1)*x2*(1 + x3), (1 + x1)*(1 + x3)*(-1 + x1 + 2*x2 + x3)];

                    dzPhi = (1/(8*c))*[(-1 + x1)*(-1 + x2)*(1 + x1 + x2 + 2*x3), -2*(-1 + x1)*(-1 + x2^2), -((-1 + x1)*(1 + x2)*(1 + x1 - x2 + 2*x3)), -2*(-1 + x1^2)*(-1 + x2),...
                                       2*(-1 + x1^2)*(1 + x2), (1 + x1)*(-1 + x2)*(-1 + x1 - x2 - 2*x3), 2*(1 + x1)*(-1 + x2^2), -((1 + x1)*(1 + x2)*(-1 + x1 + x2 - 2*x3)),...
                                       -4*(-1 + x1)*(-1 + x2)*x3, 4*(-1 + x1)*(1 + x2)*x3, 4*(1 + x1)*(-1 + x2)*x3, -4*(1 + x1)*(1 + x2)*x3,...
                                       -((-1 + x1)*(-1 + x2)*(1 + x1 + x2 - 2*x3)), 2*(-1 + x1)*(-1 + x2^2), (-1 + x1)*(1 + x2)*(1 + x1 - x2 - 2*x3), 2*(-1 + x1^2)*(-1 + x2),...
                                       -2*(-1 + x1^2)*(1 + x2), -((1 + x1)*(-1 + x2)*(-1 + x1 - x2 + 2*x3)), -2*(1 + x1)*(-1 + x2^2), (1 + x1)*(1 + x2)*(-1 + x1 + x2 + 2*x3)];
                end
            elseif(elem.deg == 3)
                if(elem.type == 1) % Lagrange cubic element
                    dxPhi = (1/(4096*a))*[(1 + 18*x1 - 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(1 + 18*x1 - 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(1 + 18*x1 - 27*x1^2)*(1 + 3*x2 - x2^2 - 3*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), (1 + 18*x1 - 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3),... 
                                          9*(-3 - 2*x1 + 9*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 81*(-3 - 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 81*(-3 - 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - x3 - 9*x3^2 + 9*x3^3), 9*(-3 - 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3),... 
                                          9*(3 - 2*x1 - 9*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 81*(3 - 2*x1 - 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), -81*(-3 + 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - x3 - 9*x3^2 + 9*x3^3), 9*(3 - 2*x1 - 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3),...
                                          (-1 + 18*x1 + 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(-1 + 18*x1 + 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(-1 + 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - x3 - 9*x3^2 + 9*x3^3), (-1 + 18*x1 + 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + x3 + 9*x3^2 - 9*x3^3),... 
                                          9*(1 + 18*x1 - 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 81*(1 + 18*x1 - 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 - 3*x3 -x3^2 + 3*x3^3), 81*(-1 - 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 9*(1 + 18*x1 - 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 - 3*x3 -x3^2 + 3*x3^3),... 
                                          81*(-3 - 2*x1 + 9*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 729*(-3 - 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 - 3*x3 -x3^2 + 3*x3^3), -729*(-3 - 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 81*(-3 - 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3),...
                                          81*(3 - 2*x1 - 9*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), -729*(-3 + 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 729*(-3 + 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), -81*(-3 + 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3),...
                                          9*(-1 + 18*x1 + 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 81*(-1 + 18*x1 + 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), -81*(-1 + 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3), 9*(-1 + 18*x1 + 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 - 3*x3 - x3^2 + 3*x3^3),...
                                          9*(1 + 18*x1 - 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 + 3*x3 -x3^2 - 3*x3^3), 81*(-1 - 18*x1 + 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), -81*(-1 - 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), 9*(-1 - 18*x1 + 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          81*(-3 - 2*x1 + 9*x1^2)*(1 - x2 - 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), -729*(-3 - 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), 729*(-3 - 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), -81*(-3 - 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          -81*(-3 + 2*x1 + 9*x1^2)*(1 - x2 - 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), 729*(-3 + 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), -729*(-3 + 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), 81*(-3 + 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          9*(-1 + 18*x1 + 27*x1^2)*(1 - x2 - 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), -81*(-1 + 18*x1 + 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), 81*(-1 + 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3), -9*(-1 + 18*x1 + 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          (1 + 18*x1 - 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(1 + 18*x1 - 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(-1 - 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), (1 + 18*x1 - 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3),... 
                                          9*(-3 - 2*x1 + 9*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), 81*(-3 - 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), -81*(-3 - 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(-3 - 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3),...
                                          9*(3 - 2*x1 - 9*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), -81*(-3 + 2*x1 + 9*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), 81*(-3 + 2*x1 + 9*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), -9*(-3 + 2*x1 + 9*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3),...
                                          (-1 + 18*x1 + 27*x1^2)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(-1 + 18*x1 + 27*x1^2)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), -9*(-1 + 18*x1 + 27*x1^2)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3), (-1 + 18*x1 + 27*x1^2)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - x3 + 9*x3^2 + 9*x3^3)];
                                      
                    dyPhi = (1/(4096*b))*[(-1 +x1 + 9*x1^2 - 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(3 - 2*x2 - 9*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), (-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3),... 
                                          9*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(3 - 2*x2 - 9*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3),...
                                          9*(1 + 3*x1 - x1^2 - 3*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(1 - x3 - 9*x3^2 + 9*x3^3), -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(1 - x3 - 9*x3^2 + 9*x3^3), 9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(1 - x3 - 9*x3^2 + 9*x3^3),...
                                          (-1 - x1 + 9*x1^2 + 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(3 - 2*x2 - 9*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3), (-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 + x3 + 9*x3^2 - 9*x3^3),...
                                          9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 81*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(1 - 3*x3 -x3^2 + 3*x3^3), 81*(-1 + x1 + 9*x1^2 - 9*x1^3)*(3 - 2*x2 - 9*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3),... 
                                          81*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + 18*x2 - 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 729*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), -729*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3),...
                                          81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 18*x2 + 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), -729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3),... 
                                          9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(1 - 3*x3 -x3^2 + 3*x3^3), -81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 + 2*x2 + 9*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(1 - 3*x3 - x3^2 + 3*x3^3),...
                                          9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(1 + 3*x3 -x3^2 - 3*x3^3), 81*(1 - x1 - 9*x1^2 + 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -81*(1 - x1 - 9*x1^2 + 9*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 9*(1 - x1 - 9*x1^2 + 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -729*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 729*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                          (-1 + x1 + 9*x1^2 - 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(3 - 2*x2 - 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), (-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3),... 
                                          9*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), -81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3),...
                                          9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 18*x2 + 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), 81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), -9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3),...
                                          (-1 - x1 + 9*x1^2 + 9*x1^3)*(1 + 18*x2 - 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 - 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), -9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-3 + 2*x2 + 9*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3), (-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + 18*x2 + 27*x2^2)*(-1 - x3 + 9*x3^2 + 9*x3^3)];
                                      
                    dzPhi = (1/(4096*c))*[(-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 + 18*x3 - 27*x3^2), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 + 18*x3 - 27*x3^2), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 + 3*x2 - x2^2 - 3*x2^3)*(1 + 18*x3 - 27*x3^2), (-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 + 18*x3 - 27*x3^2),... 
                                          9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 + 18*x3 - 27*x3^2), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 + 18*x3 - 27*x3^2), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 18*x3 + 27*x3^2), 9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 + 18*x3 - 27*x3^2),... 
                                          9*(1 + 3*x1 - x1^2 - 3*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 + 18*x3 - 27*x3^2), 81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 - 18*x3 + 27*x3^2), -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 18*x3 + 27*x3^2), 9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 - 18*x3 + 27*x3^2),...
                                          (-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(1 + 18*x3 - 27*x3^2), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 + 18*x3 - 27*x3^2), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 - 18*x3 + 27*x3^2), (-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(1 + 18*x3 - 27*x3^2),...
                                          9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-3 - 2*x3 + 9*x3^2), 81*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), 81*(1 - x1 - 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 - 2*x3 + 9*x3^2),... 
                                          81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-3 - 2*x3 + 9*x3^2), 729*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), -729*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 - 2*x3 + 9*x3^2),... 
                                          81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - x2 - 9*x2^2 + 9*x2^3)*(-3 - 2*x3 + 9*x3^2), -729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), 729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 - 2*x3 + 9*x3^2),...
                                          9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-3 - 2*x3 + 9*x3^2), 81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), -81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 - 2*x3 + 9*x3^2), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 - 2*x3 + 9*x3^2),...
                                          9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(3 - 2*x3 - 9*x3^2), 81*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(3 - 2*x3 - 9*x3^2), -81*(1 - x1 - 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(3 - 2*x3 - 9*x3^2),...
                                          81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(3 - 2*x3 - 9*x3^2), -729*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), 729*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), -81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 + 2*x3 + 9*x3^2),...
                                          -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - x2 - 9*x2^2 + 9*x2^3)*(-3 + 2*x3 + 9*x3^2), 729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), -729*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), 81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 + 2*x3 + 9*x3^2),...
                                          9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(3 - 2*x3 - 9*x3^2), -81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), 81*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-3 + 2*x3 + 9*x3^2), -9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-3 + 2*x3 + 9*x3^2),...
                                          (-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + 18*x3 + 27*x3^2), 9*(-1 + x1 + 9*x1^2 - 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), 9*(1 - x1 - 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), (-1 + x1 + 9*x1^2 - 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + 18*x3 + 27*x3^2),...
                                          9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + 18*x3 + 27*x3^2), 81*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), -81*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), 9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + 18*x3 + 27*x3^2),... 
                                          9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - x2 - 9*x2^2 + 9*x2^3)*(-1 + 18*x3 + 27*x3^2), -81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), 81*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), -9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + 18*x3 + 27*x3^2),...
                                          (-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 + x2 + 9*x2^2 - 9*x2^3)*(-1 + 18*x3 + 27*x3^2), 9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), -9*(-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 + 18*x3 + 27*x3^2), (-1 - x1 + 9*x1^2 + 9*x1^3)*(-1 - x2 + 9*x2^2 + 9*x2^3)*(-1 + 18*x3 + 27*x3^2)];
                    
                elseif(elem.type == 2) % Serendipity cubic element
                    dxPhi = (1/(64*a))*[-((-1 + x2)*(-1 + x3)*(-19 - 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2)), 9*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + x3), -9*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 + x3), (1 + x2)*(-1 + x3)*(-19 - 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2),...
                                    9*(-3 - 2*x1 + 9*x1^2)*(-1 + x2)*(-1 + x3), -9*(-3 - 2*x1 + 9*x1^2)*(1 + x2)*(-1 + x3), -9*(-3 + 2*x1 + 9*x1^2)*(-1 + x2)*(-1 + x3), 9*(-3 + 2*x1 + 9*x1^2)*(1 + x2)*(-1 + x3),...
                                    (-1 + x2)*(-1 + x3)*(-19 + 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2), -9*(1 - 3*x2 - x2^2 + 3*x2^3)*(-1 + x3), 9*(-1 - 3*x2 + x2^2 + 3*x2^3)*(-1 + x3), -((1 + x2)*(-1 + x3)*(-19 + 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2)),...
                                    9*(-1 + x2)*(1 - 3*x3 - x3^2 + 3*x3^3), -9*(1 + x2)*(1 - 3*x3 - x3^2 + 3*x3^3), -9*(-1 + x2)*(1 - 3*x3 - x3^2 + 3*x3^3), 9*(1 + x2)*(1 - 3*x3 - x3^2 + 3*x3^3),...
                                    -9*(-1 + x2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 9*(1 + x2)*(-1 - 3*x3 + x3^2 + 3*x3^3), 9*(-1 + x2)*(-1 - 3*x3 + x3^2 + 3*x3^3), -9*(1 + x2)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                    (-1 + x2)*(1 + x3)*(-19 - 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2), -9*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 + x3), 9*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 + x3), -((1 + x2)*(1 + x3)*(-19 - 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2)),...
                                    -9*(-3 - 2*x1 + 9*x1^2)*(-1 + x2)*(1 + x3), 9*(-3 - 2*x1 + 9*x1^2)*(1 + x2)*(1 + x3), 9*(-3 + 2*x1 + 9*x1^2)*(-1 + x2)*(1 + x3), -9*(-3 + 2*x1 + 9*x1^2)*(1 + x2)*(1 + x3),...
                                    -((-1 + x2)*(1 + x3)*(-19 + 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2)), 9*(1 - 3*x2 - x2^2 + 3*x2^3)*(1 + x3), -9*(-1 - 3*x2 + x2^2 + 3*x2^3)*(1 + x3), (1 + x2)*(1 + x3)*(-19 + 18*x1 + 27*x1^2 + 9*x2^2 + 9*x3^2)];
                
                    dyPhi = (1/(64*b))*[-((-1 + x1)*(-1 + x3)*(-19 + 9*x1^2 - 18*x2 + 27*x2^2 + 9*x3^2)), 9*(-1 + x1)*(-3 - 2*x2 + 9*x2^2)*(-1 + x3), -9*(-1 + x1)*(-3 + 2*x2 + 9*x2^2)*(-1 + x3), (-1 + x1)*(-1 + x3)*(-19 + 9*x1^2 + 18*x2 + 27*x2^2 + 9*x3^2),... 
                                        9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x3), -9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 +x3), -9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + x3), 9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + x3),...
                                        (1 + x1)*(-1 + x3)*(-19 + 9*x1^2 - 18*x2 + 27*x2^2 + 9*x3^2), -9*(1 + x1)*(-3 - 2*x2 + 9*x2^2)*(-1 + x3), 9*(1 + x1)*(-3 + 2*x2 + 9*x2^2)*(-1 + x3), -((1 + x1)*(-1 + x3)*(-19 + 9*x1^2 + 18*x2 + 27*x2^2 + 9*x3^2)),...
                                        9*(-1 + x1)*(1 - 3*x3 - x3^2 + 3*x3^3), -9*(-1 + x1)*(1 - 3*x3 - x3^2 + 3*x3^3), -9*(1 + x1)*(1 - 3*x3 - x3^2 + 3*x3^3), 9*(1 + x1)*(1 - 3*x3 - x3^2 + 3*x3^3), -9*(-1 + x1)*(-1 - 3*x3 + x3^2 + 3*x3^3),...
                                        9*(-1 + x1)*(-1 - 3*x3 + x3^2 + 3*x3^3), 9*(1 + x1)*(-1 - 3*x3 + x3^2 + 3*x3^3), -9*(1 + x1)*(-1 - 3*x3 + x3^2 + 3*x3^3), (-1 + x1)*(1 + x3)*(-19 + 9*x1^2 - 18*x2 + 27*x2^2 + 9*x3^2),...
                                        -9*(-1 + x1)*(-3 - 2*x2 + 9*x2^2)*(1 + x3), 9*(-1 + x1)*(-3 + 2*x2 + 9*x2^2)*(1 + x3), -((-1 + x1)*(1 + x3)*(-19 + 9*x1^2 + 18*x2 + 27*x2^2 + 9*x3^2)), -9*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + x3),...
                                        9*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + x3), 9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 + x3), -9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 +x3), -((1 + x1)*(1 + x3)*(-19 + 9*x1^2 - 18*x2 + 27*x2^2 + 9*x3^2)),...
                                        9*(1 + x1)*(-3 - 2*x2 + 9*x2^2)*(1 + x3), -9*(1 + x1)*(-3 + 2*x2 + 9*x2^2)*(1 + x3), (1 + x1)*(1 + x3)*(-19 + 9*x1^2 + 18*x2 + 27*x2^2 + 9*x3^2)];

                    dzPhi = (1/(64*c))*[-((-1 + x1)*(-1 + x2)*(-19 + 9*x1^2 + 9*x2^2 - 18*x3 + 27*x3^2)), 9*(-1 + x1)*(1 - 3*x2 - x2^2 + 3*x2^3), -9*(-1 + x1)*(-1 - 3*x2 + x2^2 + 3*x2^3), (-1 + x1)*(1 + x2)*(-19 + 9*x1^2 + 9*x2^2 - 18*x3 + 27*x3^2),...
                                        9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x2), -9*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + x2), -9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + x2), 9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 + x2),...
                                        (1 + x1)*(-1 + x2)*(-19 + 9*x1^2 + 9*x2^2 - 18*x3 + 27*x3^2), -9*(1 + x1)*(1 - 3*x2 - x2^2 + 3*x2^3), 9*(1 + x1)*(-1 - 3*x2 + x2^2 + 3*x2^3), -((1 + x1)*(1 + x2)*(-19 + 9*x1^2 + 9*x2^2 - 18*x3 + 27*x3^2)),...
                                        9*(-1 + x1)*(-1 + x2)*(-3 - 2*x3 + 9*x3^2), -9*(-1 + x1)*(1 + x2)*(-3 - 2*x3 + 9*x3^2), -9*(1 + x1)*(-1 + x2)*(-3 - 2*x3 + 9*x3^2), 9*(1 + x1)*(1 + x2)*(-3 - 2*x3 + 9*x3^2),...
                                        -9*(-1 + x1)*(-1 + x2)*(-3 + 2*x3 + 9*x3^2), 9*(-1 + x1)*(1 + x2)*(-3 + 2*x3 + 9*x3^2), 9*(1 + x1)*(-1 + x2)*(-3 + 2*x3 + 9*x3^2), -9*(1 + x1)*(1 + x2)*(-3 + 2*x3 + 9*x3^2),...
                                        (-1 + x1)*(-1 + x2)*(-19 + 9*x1^2 + 9*x2^2 + 18*x3 + 27*x3^2), -9*(-1 + x1)*(1 - 3*x2 - x2^2 + 3*x2^3), 9*(-1 + x1)*(-1 - 3*x2 + x2^2 + 3*x2^3), -((-1 + x1)*(1 + x2)*(-19 + 9*x1^2 + 9*x2^2 + 18*x3 + 27*x3^2)),...
                                        -9*(1 - 3*x1 - x1^2 + 3*x1^3)*(-1 + x2), 9*(1 - 3*x1 - x1^2 + 3*x1^3)*(1 + x2), 9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(-1 + x2), -9*(-1 - 3*x1 + x1^2 + 3*x1^3)*(1 + x2),...
                                        -((1 + x1)*(-1 + x2)*(-19 + 9*x1^2 + 9*x2^2 + 18*x3 + 27*x3^2)), 9*(1 + x1)*(1 - 3*x2 - x2^2 + 3*x2^3), -9*(1 + x1)*(-1 - 3*x2 + x2^2 + 3*x2^3), (1 + x1)*(1 + x2)*(-19 + 9*x1^2 + 9*x2^2 + 18*x3 + 27*x3^2)]; 
                end
            end

            % Strain-displacement matrix B
            B = zeros(6, 3*m);
            B(1, 3*aux-2) = dxPhi;
            B(2, 3*aux-1) = dyPhi;
            B(3, 3*aux) = dzPhi;
            B(4, 3*aux-2) = dyPhi;
            B(4, 3*aux-1) = dxPhi;
            B(5, 3*aux-1) = dzPhi;
            B(5, 3*aux) = dyPhi;
            B(6, 3*aux-2) = dzPhi;
            B(6, 3*aux) = dxPhi;
            
            k2 = (w(g1)*w(g2)*w(g3))*B'*D*B;
            k = k + k2;   
        end
    end
end

k = (a*b*c)*k;
k = (k+k')/2;

end